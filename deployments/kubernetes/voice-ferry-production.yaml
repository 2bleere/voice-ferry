apiVersion: v1
kind: Namespace
metadata:
  name: voice-ferry
  labels:
    name: voice-ferry
    app.kubernetes.io/name: voice-ferry
    app.kubernetes.io/version: "1.0.0"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: voice-ferry-config
  namespace: voice-ferry
  labels:
    app: voice-ferry
    component: config
data:
  config.yaml: |
    debug: false
    log_level: "info"
    
    sip:
      host: "0.0.0.0"
      port: 5060
      transport: "UDP"
      tls:
        enabled: true
        port: 5061
        cert_file: "/etc/ssl/certs/tls.crt"
        key_file: "/etc/ssl/private/tls.key"
      timeouts:
        transaction: 32s
        dialog: 1800s
        registration: 3600s
        invite: 180s
      user_agent: "Voice Ferry SIP B2BUA v1.0"
    
    grpc:
      host: "0.0.0.0"
      port: 50051
      tls:
        enabled: false  # Enable in production with proper certs
      rate_limit:
        enabled: true
        requests_per_minute: 1000
    
    health:
      host: "0.0.0.0"
      port: 8080
      endpoints:
        liveness: "/healthz/live"
        readiness: "/healthz/ready"
        startup: "/healthz/startup"
    
    metrics:
      enabled: true
      host: "0.0.0.0"
      port: 8080
      path: "/metrics"
      prometheus:
        enabled: true
        namespace: "voice_ferry"
        subsystem: "b2bua"
    
    logging:
      level: "info"
      format: "json"
      output: "stdout"
      fields:
        service: "voice-ferry-b2bua"
        version: "1.0.0"
        environment: "production"
    
    etcd:
      endpoints:
        - "etcd:2379"
      dial_timeout: 5s
      request_timeout: 10s
    
    redis:
      enabled: true
      host: "redis"
      port: 6379
      db: 0
      pool_size: 20
      enable_session_limits: true
      max_sessions_per_user: 10
      session_limit_action: "reject"
      session_timeout: 3600s
    
    rtpengine:
      enabled: true
      instances:
        - id: "rtpengine-1"
          host: "rtpengine"
          port: 22222
          weight: 100
          enabled: true
      timeout: 5s
      max_retries: 3
      retry_delay: 1s
    
    security:
      jwt:
        enabled: true
        signing_key: "${JWT_SIGNING_KEY}"
        expiration: 24h
        issuer: "voice-ferry-b2bua"
        audience: "voice-ferry-api"
      ip_acl:
        enabled: true
        default_action: "allow"
        rules:
          - cidr: "10.0.0.0/8"
            action: "allow"
            description: "Kubernetes cluster network"
          - cidr: "172.16.0.0/12"
            action: "allow"
            description: "Private network"
          - cidr: "192.168.0.0/16"
            action: "allow"
            description: "Private network"
      rate_limiting:
        enabled: true
        global:
          requests_per_second: 1000
          burst: 2000
        per_ip:
          requests_per_second: 100
          burst: 200
    
    sessions:
      storage: "redis"
      limits:
        global_max_sessions: 10000
        per_user_max_sessions: 10
        per_ip_max_sessions: 100
      timeouts:
        idle_timeout: 1800s
        max_session_time: 7200s
      cleanup:
        interval: 60s
        expired_sessions_batch_size: 100
    
    routing:
      default_action: "reject"
      storage: "etcd"
      max_rules: 1000
      evaluation_timeout: 100ms
    
    performance:
      sip_workers: 10
      grpc_workers: 5
      max_concurrent_calls: 5000
      max_connections_per_ip: 100
      gc_target_percentage: 75
    
    monitoring:
      health_checks:
        interval: 30s
        timeout: 10s
        dependencies:
          - name: "redis"
            type: "redis"
            config:
              host: "redis"
              port: 6379
          - name: "etcd"
            type: "etcd"
            config:
              endpoints: ["etcd:2379"]
          - name: "rtpengine"
            type: "rtpengine"
            config:
              host: "rtpengine"
              port: 22222
---
apiVersion: v1
kind: Secret
metadata:
  name: voice-ferry-secrets
  namespace: voice-ferry
  labels:
    app: voice-ferry
    component: secrets
type: Opaque
data:
  # Base64 encoded JWT signing key - CHANGE THIS IN PRODUCTION!
  jwt-signing-key: eW91ci1zZWNyZXQta2V5LWhlcmUtY2hhbmdlLW1lLWluLXByb2R1Y3Rpb24=
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: voice-ferry
  namespace: voice-ferry
  labels:
    app: voice-ferry
    component: serviceaccount
automountServiceAccountToken: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: voice-ferry
  namespace: voice-ferry
  labels:
    app: voice-ferry
    component: b2bua
    version: v1.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: voice-ferry
      component: b2bua
  template:
    metadata:
      labels:
        app: voice-ferry
        component: b2bua
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: voice-ferry
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: voice-ferry
        image: 2bleere/voice-ferry:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1001
        ports:
        - name: sip-udp
          containerPort: 5060
          protocol: UDP
        - name: sip-tcp
          containerPort: 5060
          protocol: TCP
        - name: sip-tls
          containerPort: 5061
          protocol: TCP
        - name: grpc
          containerPort: 50051
          protocol: TCP
        - name: health
          containerPort: 8080
          protocol: TCP
        env:
        - name: JWT_SIGNING_KEY
          valueFrom:
            secretKeyRef:
              name: voice-ferry-secrets
              key: jwt-signing-key
        - name: LOG_LEVEL
          value: "info"
        - name: CONFIG_FILE
          value: "/etc/voice-ferry/config.yaml"
        volumeMounts:
        - name: config
          mountPath: /etc/voice-ferry
          readOnly: true
        - name: tmp
          mountPath: /tmp
        - name: app-logs
          mountPath: /app/logs
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /healthz/live
            port: health
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: health
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /healthz/startup
            port: health
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 12
      volumes:
      - name: config
        configMap:
          name: voice-ferry-config
      - name: tmp
        emptyDir: {}
      - name: app-logs
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
---
apiVersion: v1
kind: Service
metadata:
  name: voice-ferry-sip
  namespace: voice-ferry
  labels:
    app: voice-ferry
    component: sip
  annotations:
    metallb.universe.tf/loadBalancerIPs: ""  # Set your LoadBalancer IP
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  selector:
    app: voice-ferry
    component: b2bua
  ports:
  - name: sip-udp
    port: 5060
    targetPort: 5060
    protocol: UDP
  - name: sip-tcp
    port: 5060
    targetPort: 5060
    protocol: TCP
  - name: sip-tls
    port: 5061
    targetPort: 5061
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: voice-ferry-grpc
  namespace: voice-ferry
  labels:
    app: voice-ferry
    component: grpc
spec:
  type: ClusterIP
  selector:
    app: voice-ferry
    component: b2bua
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: voice-ferry-metrics
  namespace: voice-ferry
  labels:
    app: voice-ferry
    component: metrics
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: voice-ferry
    component: b2bua
  ports:
  - name: metrics
    port: 8080
    targetPort: 8080
    protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: voice-ferry-network-policy
  namespace: voice-ferry
  labels:
    app: voice-ferry
spec:
  podSelector:
    matchLabels:
      app: voice-ferry
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
  - from: []
    ports:
    - protocol: UDP
      port: 5060
    - protocol: TCP
      port: 5060
    - protocol: TCP
      port: 5061
  - from:
    - namespaceSelector:
        matchLabels:
          name: voice-ferry
    ports:
    - protocol: TCP
      port: 50051
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: voice-ferry
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: voice-ferry-pdb
  namespace: voice-ferry
  labels:
    app: voice-ferry
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: voice-ferry
      component: b2bua
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: voice-ferry-hpa
  namespace: voice-ferry
  labels:
    app: voice-ferry
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: voice-ferry
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60

apiVersion: v1
kind: Namespace
metadata:
  name: voice-ferry
  labels:
    name: voice-ferry
    app.kubernetes.io/name: voice-ferry
    app.kubernetes.io/version: "1.0.0"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: voice-ferry-config
  namespace: voice-ferry
  labels:
    app: voice-ferry
    component: config
data:
  config.yaml: |
    debug: false
    log_level: "info"
    
    sip:
      host: "0.0.0.0"
      port: 5060
      transport: "UDP"
      tls:
        enabled: true
        port: 5061
        cert_file: "/etc/ssl/certs/tls.crt"
        key_file: "/etc/ssl/private/tls.key"
      timeouts:
        transaction: 32s
        dialog: 1800s
        registration: 3600s
        invite: 180s
      user_agent: "Voice Ferry SIP B2BUA v1.0"
    
    grpc:
      host: "0.0.0.0"
      port: 50051
      tls:
        enabled: true
        cert_file: "/etc/ssl/certs/tls.crt"
        key_file: "/etc/ssl/private/tls.key"
      rate_limit:
        enabled: true
        requests_per_minute: 1000
    
    health:
      host: "0.0.0.0"
      port: 8080
    
    metrics:
      enabled: true
      host: "0.0.0.0"
      port: 8080
      path: "/metrics"
    
    logging:
      level: "info"
      format: "json"
      output: "stdout"
    
    etcd:
      endpoints:
        - "etcd:2379"
      dial_timeout: 5s
      request_timeout: 10s
    
    redis:
      enabled: true
      host: "redis"
      port: 6379
      db: 0
      pool_size: 20
      enable_session_limits: true
      max_sessions_per_user: 10
      session_limit_action: "reject"
    
    rtpengine:
      enabled: true
      instances:
        - id: "rtpengine-1"
          host: "rtpengine"
          port: 22222
          weight: 100
          enabled: true
      timeout: 5s
      max_retries: 3
    
    security:
      jwt:
        enabled: true
        signing_key: "${JWT_SIGNING_KEY}"
        expiration: 24h
        issuer: "voice-ferry-b2bua"
      ip_acl:
        enabled: true
        default_action: "allow"
      rate_limiting:
        enabled: true
        global:
          requests_per_second: 1000
          burst: 2000
    
    sessions:
      storage: "redis"
      limits:
        global_max_sessions: 10000
        per_user_max_sessions: 10
      timeouts:
        idle_timeout: 1800s
        max_session_time: 7200s
    
    performance:
      sip_workers: 10
      grpc_workers: 5
      max_concurrent_calls: 5000
        issuer: "b2bua"
      sip:
        ip_acls:
          - name: "cluster"
            action: "allow"
            networks:
              - "10.0.0.0/8"
              - "172.16.0.0/12"
              - "192.168.0.0/16"
        digest_auth:
          realm: "sip.voice-ferry.local"
          enabled: false
---
apiVersion: v1
kind: Secret
metadata:
  name: b2bua-secrets
  namespace: voice-ferry
  labels:
    app: sip-b2bua
type: Opaque
data:
  jwt-signing-key: eW91ci1zZWNyZXQta2V5LWhlcmU= # base64 encoded "your-secret-key-here"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sip-b2bua
  namespace: voice-ferry
  labels:
    app: sip-b2bua
    version: v1.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: sip-b2bua
  template:
    metadata:
      labels:
        app: sip-b2bua
        version: v1.0.0
    spec:
      serviceAccountName: sip-b2bua
      initContainers:
      # Wait for Redis to be ready
      - name: wait-for-redis
        image: redis:7-alpine
        command: 
        - sh
        - -c
        - |
          echo "Waiting for Redis to be ready..."
          until redis-cli -h redis -p 6379 ping; do
            echo "Redis not ready, waiting..."
            sleep 2
          done
          echo "Redis is ready!"
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "64Mi"
            cpu: "50m"
      # Wait for etcd to be ready
      - name: wait-for-etcd
        image: quay.io/coreos/etcd:v3.5.9
        command:
        - sh
        - -c
        - |
          echo "Waiting for etcd to be ready..."
          until etcdctl --endpoints=http://etcd:2379 endpoint health; do
            echo "etcd not ready, waiting..."
            sleep 2
          done
          echo "etcd is ready!"
        env:
        - name: ETCDCTL_API
          value: "3"
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "64Mi"
            cpu: "50m"
      # Wait for RTPEngine to be ready
      - name: wait-for-rtpengine
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          echo "Waiting for RTPEngine to be ready..."
          until nc -z rtpengine 22222; do
            echo "RTPEngine not ready, waiting..."
            sleep 2
          done
          echo "RTPEngine is ready!"
        resources:
          requests:
            memory: "16Mi"
            cpu: "10m"
          limits:
            memory: "32Mi"
            cpu: "50m"
      containers:
      - name: sip-b2bua
        image: ghcr.io/voice-ferry-c4/sip-b2bua:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: sip-udp
          containerPort: 5060
          protocol: UDP
        - name: sip-tcp
          containerPort: 5060
          protocol: TCP
        - name: grpc
          containerPort: 50051
          protocol: TCP
        - name: health
          containerPort: 8080
          protocol: TCP
        env:
        - name: JWT_SIGNING_KEY
          valueFrom:
            secretKeyRef:
              name: b2bua-secrets
              key: jwt-signing-key
        volumeMounts:
        - name: config
          mountPath: /etc/b2bua
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /healthz/live
            port: health
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: health
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /healthz/startup
            port: health
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 12
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
      volumes:
      - name: config
        configMap:
          name: b2bua-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sip-b2bua
  namespace: voice-ferry
  labels:
    app: sip-b2bua
automountServiceAccountToken: false
---
apiVersion: v1
kind: Service
metadata:
  name: sip-b2bua-sip
  namespace: voice-ferry
  labels:
    app: sip-b2bua
    service: sip
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  selector:
    app: sip-b2bua
  ports:
  - name: sip-udp
    port: 5060
    targetPort: 5060
    protocol: UDP
  - name: sip-tcp
    port: 5060
    targetPort: 5060
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: sip-b2bua-grpc
  namespace: voice-ferry
  labels:
    app: sip-b2bua
    service: grpc
spec:
  type: ClusterIP
  selector:
    app: sip-b2bua
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: sip-b2bua-health
  namespace: voice-ferry
  labels:
    app: sip-b2bua
    service: health
spec:
  type: ClusterIP
  selector:
    app: sip-b2bua
  ports:
  - name: health
    port: 8080
    targetPort: 8080
    protocol: TCP
